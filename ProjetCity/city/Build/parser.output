Terminals unused in grammar

   Pour
   eq
   ne
   inf
   sup
   f_void


Grammar

    0 $accept: programme $end

    1 programme: function NL programme
    2          | END NL

    3 function: expression
    4         | Construire RAYON '{' STATEMENTS '}'

    5 RAYON: '(' expression ')'
    6      | %empty

    7 STATEMENTS: STATEMENT NL STATEMENTS
    8           | %empty

    9 STATEMENT: BASE
   10          | MANAGE
   11          | VAR
   12          | KEVIN
   13          | CONDLOOP

   14 COORD: '(' expression ',' expression ',' expression ')'

   15 NODE: id_maison
   16     | maison '[' expression ']'
   17     | COORD

   18 BASE: HOUSE
   19     | HOUSE COORD
   20     | Route NODE arrow NODE

   21 HOUSE: Maison
   22      | Maison id_maison

   23 MANAGE: Tourner NODE HORAIRE
   24       | Orienter NODE DEGREE
   25       | Deplacer NODE arrow COORD
   26       | Detruire NODE

   27 $@1: %empty

   28 MANAGE: Detruire NODE $@1 arrow NODE
   29       | Position NODE
   30       | Orientation NODE
   31       | Voisinage NODE

   32 DEGREE: num degree

   33 HORAIRE: horaire
   34        | '!' horaire

   35 VAR: id_var '=' expression

   36 KEVIN: Coloriser NODE COLOR
   37      | Couleur NODE
   38      | Voisin NODE expression

   39 COLOR: hex_RGB
   40      | COORD

   41 CONDLOOP: Si expression '{' STATEMENTS '}' SINON
   42         | Tant que expression '{' STATEMENTS '}'
   43         | Repeter expression fois '{' STATEMENTS '}'

   44 SINON: Sinon '{' STATEMENTS '}'
   45      | %empty

   46 expression: num
   47           | id_var
   48           | '(' expression ')'
   49           | expression '+' expression
   50           | expression '-' expression
   51           | expression '*' expression
   52           | expression '/' expression
   53           | '-' expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 34
'(' (40) 5 14 48
')' (41) 5 14 48
'*' (42) 51
'+' (43) 49
',' (44) 14
'-' (45) 50 53
'/' (47) 52
'=' (61) 35
'[' (91) 16
']' (93) 16
'{' (123) 4 41 42 43 44
'}' (125) 4 41 42 43 44
error (256)
NL (258) 1 2 7
END (259) 2
num <double> (260) 32 46
id_maison <std::string> (261) 15 22
id_var <std::string> (262) 35 47
hex_RGB <std::string> (263) 39
Construire (264) 4
Detruire (265) 26 28
Maison (266) 21 22
maison (267) 16
Route (268) 20
arrow (269) 20 25 28
Tourner (270) 23
horaire (271) 33 34
Orienter (272) 24
Orientation (273) 30
Deplacer (274) 25
Position (275) 29
Voisinage (276) 31
Voisin (277) 38
Coloriser (278) 36
Couleur (279) 37
Si (280) 41
Sinon (281) 44
Tant (282) 42
que (283) 42
Repeter (284) 43
fois (285) 43
Pour (286)
eq (287)
ne (288)
inf (289)
sup (290)
degree (291) 32
f_void (292)
NEG (293)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
programme (53)
    on left: 1 2, on right: 0 1
function (54)
    on left: 3 4, on right: 1
RAYON (55)
    on left: 5 6, on right: 4
STATEMENTS (56)
    on left: 7 8, on right: 4 7 41 42 43 44
STATEMENT (57)
    on left: 9 10 11 12 13, on right: 7
COORD <int> (58)
    on left: 14, on right: 17 19 25 40
NODE <int> (59)
    on left: 15 16 17, on right: 20 23 24 25 26 28 29 30 31 36 37 38
BASE (60)
    on left: 18 19 20, on right: 9
HOUSE (61)
    on left: 21 22, on right: 18 19
MANAGE (62)
    on left: 23 24 25 26 28 29 30 31, on right: 10
$@1 (63)
    on left: 27, on right: 28
DEGREE (64)
    on left: 32, on right: 24
HORAIRE (65)
    on left: 33 34, on right: 23
VAR (66)
    on left: 35, on right: 11
KEVIN (67)
    on left: 36 37 38, on right: 12
COLOR (68)
    on left: 39 40, on right: 36
CONDLOOP (69)
    on left: 41 42 43, on right: 13
SINON (70)
    on left: 44 45, on right: 41
expression <int> (71)
    on left: 46 47 48 49 50 51 52 53, on right: 3 5 14 16 35 38 41
    42 43 48 49 50 51 52 53


State 0

    0 $accept: . programme $end

    END         shift, and go to state 1
    num         shift, and go to state 2
    id_var      shift, and go to state 3
    Construire  shift, and go to state 4
    '-'         shift, and go to state 5
    '('         shift, and go to state 6

    programme   go to state 7
    function    go to state 8
    expression  go to state 9


State 1

    2 programme: END . NL

    NL  shift, and go to state 10


State 2

   46 expression: num .

    $default  reduce using rule 46 (expression)


State 3

   47 expression: id_var .

    $default  reduce using rule 47 (expression)


State 4

    4 function: Construire . RAYON '{' STATEMENTS '}'

    '('  shift, and go to state 11

    $default  reduce using rule 6 (RAYON)

    RAYON  go to state 12


State 5

   53 expression: '-' . expression

    num     shift, and go to state 2
    id_var  shift, and go to state 3
    '-'     shift, and go to state 5
    '('     shift, and go to state 6

    expression  go to state 13


State 6

   48 expression: '(' . expression ')'

    num     shift, and go to state 2
    id_var  shift, and go to state 3
    '-'     shift, and go to state 5
    '('     shift, and go to state 6

    expression  go to state 14


State 7

    0 $accept: programme . $end

    $end  shift, and go to state 15


State 8

    1 programme: function . NL programme

    NL  shift, and go to state 16


State 9

    3 function: expression .
   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression

    '-'  shift, and go to state 17
    '+'  shift, and go to state 18
    '*'  shift, and go to state 19
    '/'  shift, and go to state 20

    $default  reduce using rule 3 (function)


State 10

    2 programme: END NL .

    $default  reduce using rule 2 (programme)


State 11

    5 RAYON: '(' . expression ')'

    num     shift, and go to state 2
    id_var  shift, and go to state 3
    '-'     shift, and go to state 5
    '('     shift, and go to state 6

    expression  go to state 21


State 12

    4 function: Construire RAYON . '{' STATEMENTS '}'

    '{'  shift, and go to state 22


State 13

   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression
   53           | '-' expression .

    $default  reduce using rule 53 (expression)


State 14

   48 expression: '(' expression . ')'
   49           | expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression

    '-'  shift, and go to state 17
    '+'  shift, and go to state 18
    '*'  shift, and go to state 19
    '/'  shift, and go to state 20
    ')'  shift, and go to state 23


State 15

    0 $accept: programme $end .

    $default  accept


State 16

    1 programme: function NL . programme

    END         shift, and go to state 1
    num         shift, and go to state 2
    id_var      shift, and go to state 3
    Construire  shift, and go to state 4
    '-'         shift, and go to state 5
    '('         shift, and go to state 6

    programme   go to state 24
    function    go to state 8
    expression  go to state 9


State 17

   50 expression: expression '-' . expression

    num     shift, and go to state 2
    id_var  shift, and go to state 3
    '-'     shift, and go to state 5
    '('     shift, and go to state 6

    expression  go to state 25


State 18

   49 expression: expression '+' . expression

    num     shift, and go to state 2
    id_var  shift, and go to state 3
    '-'     shift, and go to state 5
    '('     shift, and go to state 6

    expression  go to state 26


State 19

   51 expression: expression '*' . expression

    num     shift, and go to state 2
    id_var  shift, and go to state 3
    '-'     shift, and go to state 5
    '('     shift, and go to state 6

    expression  go to state 27


State 20

   52 expression: expression '/' . expression

    num     shift, and go to state 2
    id_var  shift, and go to state 3
    '-'     shift, and go to state 5
    '('     shift, and go to state 6

    expression  go to state 28


State 21

    5 RAYON: '(' expression . ')'
   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression

    '-'  shift, and go to state 17
    '+'  shift, and go to state 18
    '*'  shift, and go to state 19
    '/'  shift, and go to state 20
    ')'  shift, and go to state 29


State 22

    4 function: Construire RAYON '{' . STATEMENTS '}'

    id_var       shift, and go to state 30
    Detruire     shift, and go to state 31
    Maison       shift, and go to state 32
    Route        shift, and go to state 33
    Tourner      shift, and go to state 34
    Orienter     shift, and go to state 35
    Orientation  shift, and go to state 36
    Deplacer     shift, and go to state 37
    Position     shift, and go to state 38
    Voisinage    shift, and go to state 39
    Voisin       shift, and go to state 40
    Coloriser    shift, and go to state 41
    Couleur      shift, and go to state 42
    Si           shift, and go to state 43
    Tant         shift, and go to state 44
    Repeter      shift, and go to state 45

    $default  reduce using rule 8 (STATEMENTS)

    STATEMENTS  go to state 46
    STATEMENT   go to state 47
    BASE        go to state 48
    HOUSE       go to state 49
    MANAGE      go to state 50
    VAR         go to state 51
    KEVIN       go to state 52
    CONDLOOP    go to state 53


State 23

   48 expression: '(' expression ')' .

    $default  reduce using rule 48 (expression)


State 24

    1 programme: function NL programme .

    $default  reduce using rule 1 (programme)


State 25

   49 expression: expression . '+' expression
   50           | expression . '-' expression
   50           | expression '-' expression .
   51           | expression . '*' expression
   52           | expression . '/' expression

    '*'  shift, and go to state 19
    '/'  shift, and go to state 20

    $default  reduce using rule 50 (expression)


State 26

   49 expression: expression . '+' expression
   49           | expression '+' expression .
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression

    '*'  shift, and go to state 19
    '/'  shift, and go to state 20

    $default  reduce using rule 49 (expression)


State 27

   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   51           | expression '*' expression .
   52           | expression . '/' expression

    $default  reduce using rule 51 (expression)


State 28

   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression
   52           | expression '/' expression .

    $default  reduce using rule 52 (expression)


State 29

    5 RAYON: '(' expression ')' .

    $default  reduce using rule 5 (RAYON)


State 30

   35 VAR: id_var . '=' expression

    '='  shift, and go to state 54


State 31

   26 MANAGE: Detruire . NODE
   28       | Detruire . NODE $@1 arrow NODE

    id_maison  shift, and go to state 55
    maison     shift, and go to state 56
    '('        shift, and go to state 57

    COORD  go to state 58
    NODE   go to state 59


State 32

   21 HOUSE: Maison .
   22      | Maison . id_maison

    id_maison  shift, and go to state 60

    $default  reduce using rule 21 (HOUSE)


State 33

   20 BASE: Route . NODE arrow NODE

    id_maison  shift, and go to state 55
    maison     shift, and go to state 56
    '('        shift, and go to state 57

    COORD  go to state 58
    NODE   go to state 61


State 34

   23 MANAGE: Tourner . NODE HORAIRE

    id_maison  shift, and go to state 55
    maison     shift, and go to state 56
    '('        shift, and go to state 57

    COORD  go to state 58
    NODE   go to state 62


State 35

   24 MANAGE: Orienter . NODE DEGREE

    id_maison  shift, and go to state 55
    maison     shift, and go to state 56
    '('        shift, and go to state 57

    COORD  go to state 58
    NODE   go to state 63


State 36

   30 MANAGE: Orientation . NODE

    id_maison  shift, and go to state 55
    maison     shift, and go to state 56
    '('        shift, and go to state 57

    COORD  go to state 58
    NODE   go to state 64


State 37

   25 MANAGE: Deplacer . NODE arrow COORD

    id_maison  shift, and go to state 55
    maison     shift, and go to state 56
    '('        shift, and go to state 57

    COORD  go to state 58
    NODE   go to state 65


State 38

   29 MANAGE: Position . NODE

    id_maison  shift, and go to state 55
    maison     shift, and go to state 56
    '('        shift, and go to state 57

    COORD  go to state 58
    NODE   go to state 66


State 39

   31 MANAGE: Voisinage . NODE

    id_maison  shift, and go to state 55
    maison     shift, and go to state 56
    '('        shift, and go to state 57

    COORD  go to state 58
    NODE   go to state 67


State 40

   38 KEVIN: Voisin . NODE expression

    id_maison  shift, and go to state 55
    maison     shift, and go to state 56
    '('        shift, and go to state 57

    COORD  go to state 58
    NODE   go to state 68


State 41

   36 KEVIN: Coloriser . NODE COLOR

    id_maison  shift, and go to state 55
    maison     shift, and go to state 56
    '('        shift, and go to state 57

    COORD  go to state 58
    NODE   go to state 69


State 42

   37 KEVIN: Couleur . NODE

    id_maison  shift, and go to state 55
    maison     shift, and go to state 56
    '('        shift, and go to state 57

    COORD  go to state 58
    NODE   go to state 70


State 43

   41 CONDLOOP: Si . expression '{' STATEMENTS '}' SINON

    num     shift, and go to state 2
    id_var  shift, and go to state 3
    '-'     shift, and go to state 5
    '('     shift, and go to state 6

    expression  go to state 71


State 44

   42 CONDLOOP: Tant . que expression '{' STATEMENTS '}'

    que  shift, and go to state 72


State 45

   43 CONDLOOP: Repeter . expression fois '{' STATEMENTS '}'

    num     shift, and go to state 2
    id_var  shift, and go to state 3
    '-'     shift, and go to state 5
    '('     shift, and go to state 6

    expression  go to state 73


State 46

    4 function: Construire RAYON '{' STATEMENTS . '}'

    '}'  shift, and go to state 74


State 47

    7 STATEMENTS: STATEMENT . NL STATEMENTS

    NL  shift, and go to state 75


State 48

    9 STATEMENT: BASE .

    $default  reduce using rule 9 (STATEMENT)


State 49

   18 BASE: HOUSE .
   19     | HOUSE . COORD

    '('  shift, and go to state 57

    $default  reduce using rule 18 (BASE)

    COORD  go to state 76


State 50

   10 STATEMENT: MANAGE .

    $default  reduce using rule 10 (STATEMENT)


State 51

   11 STATEMENT: VAR .

    $default  reduce using rule 11 (STATEMENT)


State 52

   12 STATEMENT: KEVIN .

    $default  reduce using rule 12 (STATEMENT)


State 53

   13 STATEMENT: CONDLOOP .

    $default  reduce using rule 13 (STATEMENT)


State 54

   35 VAR: id_var '=' . expression

    num     shift, and go to state 2
    id_var  shift, and go to state 3
    '-'     shift, and go to state 5
    '('     shift, and go to state 6

    expression  go to state 77


State 55

   15 NODE: id_maison .

    $default  reduce using rule 15 (NODE)


State 56

   16 NODE: maison . '[' expression ']'

    '['  shift, and go to state 78


State 57

   14 COORD: '(' . expression ',' expression ',' expression ')'

    num     shift, and go to state 2
    id_var  shift, and go to state 3
    '-'     shift, and go to state 5
    '('     shift, and go to state 6

    expression  go to state 79


State 58

   17 NODE: COORD .

    $default  reduce using rule 17 (NODE)


State 59

   26 MANAGE: Detruire NODE .
   28       | Detruire NODE . $@1 arrow NODE

    arrow     reduce using rule 27 ($@1)
    $default  reduce using rule 26 (MANAGE)

    $@1  go to state 80


State 60

   22 HOUSE: Maison id_maison .

    $default  reduce using rule 22 (HOUSE)


State 61

   20 BASE: Route NODE . arrow NODE

    arrow  shift, and go to state 81


State 62

   23 MANAGE: Tourner NODE . HORAIRE

    horaire  shift, and go to state 82
    '!'      shift, and go to state 83

    HORAIRE  go to state 84


State 63

   24 MANAGE: Orienter NODE . DEGREE

    num  shift, and go to state 85

    DEGREE  go to state 86


State 64

   30 MANAGE: Orientation NODE .

    $default  reduce using rule 30 (MANAGE)


State 65

   25 MANAGE: Deplacer NODE . arrow COORD

    arrow  shift, and go to state 87


State 66

   29 MANAGE: Position NODE .

    $default  reduce using rule 29 (MANAGE)


State 67

   31 MANAGE: Voisinage NODE .

    $default  reduce using rule 31 (MANAGE)


State 68

   38 KEVIN: Voisin NODE . expression

    num     shift, and go to state 2
    id_var  shift, and go to state 3
    '-'     shift, and go to state 5
    '('     shift, and go to state 6

    expression  go to state 88


State 69

   36 KEVIN: Coloriser NODE . COLOR

    hex_RGB  shift, and go to state 89
    '('      shift, and go to state 57

    COORD  go to state 90
    COLOR  go to state 91


State 70

   37 KEVIN: Couleur NODE .

    $default  reduce using rule 37 (KEVIN)


State 71

   41 CONDLOOP: Si expression . '{' STATEMENTS '}' SINON
   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression

    '-'  shift, and go to state 17
    '+'  shift, and go to state 18
    '*'  shift, and go to state 19
    '/'  shift, and go to state 20
    '{'  shift, and go to state 92


State 72

   42 CONDLOOP: Tant que . expression '{' STATEMENTS '}'

    num     shift, and go to state 2
    id_var  shift, and go to state 3
    '-'     shift, and go to state 5
    '('     shift, and go to state 6

    expression  go to state 93


State 73

   43 CONDLOOP: Repeter expression . fois '{' STATEMENTS '}'
   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression

    fois  shift, and go to state 94
    '-'   shift, and go to state 17
    '+'   shift, and go to state 18
    '*'   shift, and go to state 19
    '/'   shift, and go to state 20


State 74

    4 function: Construire RAYON '{' STATEMENTS '}' .

    $default  reduce using rule 4 (function)


State 75

    7 STATEMENTS: STATEMENT NL . STATEMENTS

    id_var       shift, and go to state 30
    Detruire     shift, and go to state 31
    Maison       shift, and go to state 32
    Route        shift, and go to state 33
    Tourner      shift, and go to state 34
    Orienter     shift, and go to state 35
    Orientation  shift, and go to state 36
    Deplacer     shift, and go to state 37
    Position     shift, and go to state 38
    Voisinage    shift, and go to state 39
    Voisin       shift, and go to state 40
    Coloriser    shift, and go to state 41
    Couleur      shift, and go to state 42
    Si           shift, and go to state 43
    Tant         shift, and go to state 44
    Repeter      shift, and go to state 45

    $default  reduce using rule 8 (STATEMENTS)

    STATEMENTS  go to state 95
    STATEMENT   go to state 47
    BASE        go to state 48
    HOUSE       go to state 49
    MANAGE      go to state 50
    VAR         go to state 51
    KEVIN       go to state 52
    CONDLOOP    go to state 53


State 76

   19 BASE: HOUSE COORD .

    $default  reduce using rule 19 (BASE)


State 77

   35 VAR: id_var '=' expression .
   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression

    '-'  shift, and go to state 17
    '+'  shift, and go to state 18
    '*'  shift, and go to state 19
    '/'  shift, and go to state 20

    $default  reduce using rule 35 (VAR)


State 78

   16 NODE: maison '[' . expression ']'

    num     shift, and go to state 2
    id_var  shift, and go to state 3
    '-'     shift, and go to state 5
    '('     shift, and go to state 6

    expression  go to state 96


State 79

   14 COORD: '(' expression . ',' expression ',' expression ')'
   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression

    '-'  shift, and go to state 17
    '+'  shift, and go to state 18
    '*'  shift, and go to state 19
    '/'  shift, and go to state 20
    ','  shift, and go to state 97


State 80

   28 MANAGE: Detruire NODE $@1 . arrow NODE

    arrow  shift, and go to state 98


State 81

   20 BASE: Route NODE arrow . NODE

    id_maison  shift, and go to state 55
    maison     shift, and go to state 56
    '('        shift, and go to state 57

    COORD  go to state 58
    NODE   go to state 99


State 82

   33 HORAIRE: horaire .

    $default  reduce using rule 33 (HORAIRE)


State 83

   34 HORAIRE: '!' . horaire

    horaire  shift, and go to state 100


State 84

   23 MANAGE: Tourner NODE HORAIRE .

    $default  reduce using rule 23 (MANAGE)


State 85

   32 DEGREE: num . degree

    degree  shift, and go to state 101


State 86

   24 MANAGE: Orienter NODE DEGREE .

    $default  reduce using rule 24 (MANAGE)


State 87

   25 MANAGE: Deplacer NODE arrow . COORD

    '('  shift, and go to state 57

    COORD  go to state 102


State 88

   38 KEVIN: Voisin NODE expression .
   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression

    '-'  shift, and go to state 17
    '+'  shift, and go to state 18
    '*'  shift, and go to state 19
    '/'  shift, and go to state 20

    $default  reduce using rule 38 (KEVIN)


State 89

   39 COLOR: hex_RGB .

    $default  reduce using rule 39 (COLOR)


State 90

   40 COLOR: COORD .

    $default  reduce using rule 40 (COLOR)


State 91

   36 KEVIN: Coloriser NODE COLOR .

    $default  reduce using rule 36 (KEVIN)


State 92

   41 CONDLOOP: Si expression '{' . STATEMENTS '}' SINON

    id_var       shift, and go to state 30
    Detruire     shift, and go to state 31
    Maison       shift, and go to state 32
    Route        shift, and go to state 33
    Tourner      shift, and go to state 34
    Orienter     shift, and go to state 35
    Orientation  shift, and go to state 36
    Deplacer     shift, and go to state 37
    Position     shift, and go to state 38
    Voisinage    shift, and go to state 39
    Voisin       shift, and go to state 40
    Coloriser    shift, and go to state 41
    Couleur      shift, and go to state 42
    Si           shift, and go to state 43
    Tant         shift, and go to state 44
    Repeter      shift, and go to state 45

    $default  reduce using rule 8 (STATEMENTS)

    STATEMENTS  go to state 103
    STATEMENT   go to state 47
    BASE        go to state 48
    HOUSE       go to state 49
    MANAGE      go to state 50
    VAR         go to state 51
    KEVIN       go to state 52
    CONDLOOP    go to state 53


State 93

   42 CONDLOOP: Tant que expression . '{' STATEMENTS '}'
   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression

    '-'  shift, and go to state 17
    '+'  shift, and go to state 18
    '*'  shift, and go to state 19
    '/'  shift, and go to state 20
    '{'  shift, and go to state 104


State 94

   43 CONDLOOP: Repeter expression fois . '{' STATEMENTS '}'

    '{'  shift, and go to state 105


State 95

    7 STATEMENTS: STATEMENT NL STATEMENTS .

    $default  reduce using rule 7 (STATEMENTS)


State 96

   16 NODE: maison '[' expression . ']'
   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression

    '-'  shift, and go to state 17
    '+'  shift, and go to state 18
    '*'  shift, and go to state 19
    '/'  shift, and go to state 20
    ']'  shift, and go to state 106


State 97

   14 COORD: '(' expression ',' . expression ',' expression ')'

    num     shift, and go to state 2
    id_var  shift, and go to state 3
    '-'     shift, and go to state 5
    '('     shift, and go to state 6

    expression  go to state 107


State 98

   28 MANAGE: Detruire NODE $@1 arrow . NODE

    id_maison  shift, and go to state 55
    maison     shift, and go to state 56
    '('        shift, and go to state 57

    COORD  go to state 58
    NODE   go to state 108


State 99

   20 BASE: Route NODE arrow NODE .

    $default  reduce using rule 20 (BASE)


State 100

   34 HORAIRE: '!' horaire .

    $default  reduce using rule 34 (HORAIRE)


State 101

   32 DEGREE: num degree .

    $default  reduce using rule 32 (DEGREE)


State 102

   25 MANAGE: Deplacer NODE arrow COORD .

    $default  reduce using rule 25 (MANAGE)


State 103

   41 CONDLOOP: Si expression '{' STATEMENTS . '}' SINON

    '}'  shift, and go to state 109


State 104

   42 CONDLOOP: Tant que expression '{' . STATEMENTS '}'

    id_var       shift, and go to state 30
    Detruire     shift, and go to state 31
    Maison       shift, and go to state 32
    Route        shift, and go to state 33
    Tourner      shift, and go to state 34
    Orienter     shift, and go to state 35
    Orientation  shift, and go to state 36
    Deplacer     shift, and go to state 37
    Position     shift, and go to state 38
    Voisinage    shift, and go to state 39
    Voisin       shift, and go to state 40
    Coloriser    shift, and go to state 41
    Couleur      shift, and go to state 42
    Si           shift, and go to state 43
    Tant         shift, and go to state 44
    Repeter      shift, and go to state 45

    $default  reduce using rule 8 (STATEMENTS)

    STATEMENTS  go to state 110
    STATEMENT   go to state 47
    BASE        go to state 48
    HOUSE       go to state 49
    MANAGE      go to state 50
    VAR         go to state 51
    KEVIN       go to state 52
    CONDLOOP    go to state 53


State 105

   43 CONDLOOP: Repeter expression fois '{' . STATEMENTS '}'

    id_var       shift, and go to state 30
    Detruire     shift, and go to state 31
    Maison       shift, and go to state 32
    Route        shift, and go to state 33
    Tourner      shift, and go to state 34
    Orienter     shift, and go to state 35
    Orientation  shift, and go to state 36
    Deplacer     shift, and go to state 37
    Position     shift, and go to state 38
    Voisinage    shift, and go to state 39
    Voisin       shift, and go to state 40
    Coloriser    shift, and go to state 41
    Couleur      shift, and go to state 42
    Si           shift, and go to state 43
    Tant         shift, and go to state 44
    Repeter      shift, and go to state 45

    $default  reduce using rule 8 (STATEMENTS)

    STATEMENTS  go to state 111
    STATEMENT   go to state 47
    BASE        go to state 48
    HOUSE       go to state 49
    MANAGE      go to state 50
    VAR         go to state 51
    KEVIN       go to state 52
    CONDLOOP    go to state 53


State 106

   16 NODE: maison '[' expression ']' .

    $default  reduce using rule 16 (NODE)


State 107

   14 COORD: '(' expression ',' expression . ',' expression ')'
   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression

    '-'  shift, and go to state 17
    '+'  shift, and go to state 18
    '*'  shift, and go to state 19
    '/'  shift, and go to state 20
    ','  shift, and go to state 112


State 108

   28 MANAGE: Detruire NODE $@1 arrow NODE .

    $default  reduce using rule 28 (MANAGE)


State 109

   41 CONDLOOP: Si expression '{' STATEMENTS '}' . SINON

    Sinon  shift, and go to state 113

    $default  reduce using rule 45 (SINON)

    SINON  go to state 114


State 110

   42 CONDLOOP: Tant que expression '{' STATEMENTS . '}'

    '}'  shift, and go to state 115


State 111

   43 CONDLOOP: Repeter expression fois '{' STATEMENTS . '}'

    '}'  shift, and go to state 116


State 112

   14 COORD: '(' expression ',' expression ',' . expression ')'

    num     shift, and go to state 2
    id_var  shift, and go to state 3
    '-'     shift, and go to state 5
    '('     shift, and go to state 6

    expression  go to state 117


State 113

   44 SINON: Sinon . '{' STATEMENTS '}'

    '{'  shift, and go to state 118


State 114

   41 CONDLOOP: Si expression '{' STATEMENTS '}' SINON .

    $default  reduce using rule 41 (CONDLOOP)


State 115

   42 CONDLOOP: Tant que expression '{' STATEMENTS '}' .

    $default  reduce using rule 42 (CONDLOOP)


State 116

   43 CONDLOOP: Repeter expression fois '{' STATEMENTS '}' .

    $default  reduce using rule 43 (CONDLOOP)


State 117

   14 COORD: '(' expression ',' expression ',' expression . ')'
   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression

    '-'  shift, and go to state 17
    '+'  shift, and go to state 18
    '*'  shift, and go to state 19
    '/'  shift, and go to state 20
    ')'  shift, and go to state 119


State 118

   44 SINON: Sinon '{' . STATEMENTS '}'

    id_var       shift, and go to state 30
    Detruire     shift, and go to state 31
    Maison       shift, and go to state 32
    Route        shift, and go to state 33
    Tourner      shift, and go to state 34
    Orienter     shift, and go to state 35
    Orientation  shift, and go to state 36
    Deplacer     shift, and go to state 37
    Position     shift, and go to state 38
    Voisinage    shift, and go to state 39
    Voisin       shift, and go to state 40
    Coloriser    shift, and go to state 41
    Couleur      shift, and go to state 42
    Si           shift, and go to state 43
    Tant         shift, and go to state 44
    Repeter      shift, and go to state 45

    $default  reduce using rule 8 (STATEMENTS)

    STATEMENTS  go to state 120
    STATEMENT   go to state 47
    BASE        go to state 48
    HOUSE       go to state 49
    MANAGE      go to state 50
    VAR         go to state 51
    KEVIN       go to state 52
    CONDLOOP    go to state 53


State 119

   14 COORD: '(' expression ',' expression ',' expression ')' .

    $default  reduce using rule 14 (COORD)


State 120

   44 SINON: Sinon '{' STATEMENTS . '}'

    '}'  shift, and go to state 121


State 121

   44 SINON: Sinon '{' STATEMENTS '}' .

    $default  reduce using rule 44 (SINON)
